/**
 * @file telegramBotWatchDog.mjs
 *
 * @description
 * üõ°Ô∏è Telegram WatchDog Bot –¥–ª—è DSF.Finance
 *
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥—ë–∂–Ω—É—é –∏ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram-–≥—Ä—É–ø–ø—É –ø—Ä–æ–µ–∫—Ç–∞,
 * –≤–∫–ª—é—á–∞—è:
 * 
 * ‚úÖ –û—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–æ –æ–¥–Ω–æ–º—É (rate limit friendly)
 * ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ—Ç–æ–∫–æ–≤ (threads) –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ
 * ‚úÖ –†–µ–∂–∏–º –±–µ–∑ –ø–æ—Ç–æ–∫–æ–≤ (–µ—Å–ª–∏ TELEGRAM_THREAD_URL_ERRORS === 'none')
 * ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ (deduplication —á–µ—Ä–µ–∑ NodeCache + hash)
 * ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–µ–∑–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (4096 —Å–∏–º–≤–æ–ª–æ–≤)
 * ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 5 –∑–∞ 10 —Å–µ–∫—É–Ω–¥)
 * ‚úÖ –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Telegram API (429, timeouts –∏ —Ç.–¥.)
 * ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è QUIET_MODE –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É
 *
 * üîß –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è:
 * - –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ (–æ—à–∏–±–∫–∏ API, –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞, –ø—Ä–æ–∫—Å–∏, –∑–∞–ø—Ä–æ—Å–æ–≤)
 * - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Honeypot-–ª–æ–≤—É—à–µ–∫
 * - –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π
 *
 * üìå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
 * import { sendMessageToChat, safeSendMessage } from './bots/telegramBotWatchDog.mjs';
 *
 * –ü—Ä–∏–º–µ—Ä:
 * await safeSendMessage('error|0x123...', 'üö® –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ', process.env.TELEGRAM_THREAD_CONTRACT_ERRORS);
 *
 * @env TELEGRAM_BOT_TOKEN_WD        ‚Äî —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
 * @env TELEGRAM_SUPERGROUP_ID       ‚Äî ID —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
 * @env TELEGRAM_THREAD_WD_ERRORS    ‚Äî –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–æ—Ç–æ–∫ –∏–ª–∏ "none" –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
 * @env TELEGRAM_GLOBAL_RATE         ‚Äî –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ 10 —Å–µ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 5)
 * @env QUIET_MODE                   ‚Äî –µ—Å–ª–∏ true, —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è
 */

// üì¶ –ò–º–ø–æ—Ä—Ç—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { Telegraf } from 'telegraf';
import dotenv from 'dotenv';
import NodeCache from 'node-cache';
import crypto from 'crypto';

dotenv.config();

// üîê Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN_WD;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_SUPERGROUP_ID;
const TELEGRAM_THREAD_DEFAULT = process.env.TELEGRAM_THREAD_WD_ERRORS;
const TELEGRAM_GLOBAL_RATE = parseInt(process.env.TELEGRAM_GLOBAL_RATE || '5'); // –º–∞–∫—Å–∏–º—É–º 5
const QUIET_MODE = process.env.QUIET_MODE === 'true';
const TELEGRAM_MAX_LENGTH = 4096;

/**
 * üõ°Ô∏è Telegram deduplication –∫—ç—à
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—à–∏–±–æ–∫ –∏–ª–∏ –∞–ª–µ—Ä—Ç–æ–≤), TTL ‚Äî 10 —Å–µ–∫—É–Ω–¥.
 */
const telegramLimiter = new NodeCache({ stdTTL: 10 }); // 10 —Å–µ–∫—É–Ω–¥

/**
 * üì® –û—á–µ—Ä–µ–¥—å –∏—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏.
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Å–ø–∞–π–∫–æ–≤ –∏ –æ—à–∏–±–æ–∫ "Too Many Requests".
 */
const messageQueue = [];

/**
 * üîÑ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ (10 —Å–µ–∫)
 */
let telegramGlobalCount = 0;

/**
 * ‚è≥ –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏
 */
let isProcessingQueue = false;

/**
 * ‚è±Ô∏è –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (rolling window)
 */
setInterval(() => telegramGlobalCount = 0, 10_000);

// ü§ñ Telegram-–±–æ—Ç
const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

/**
 * üß† –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
 *
 * –•–µ—à–∏—Ä—É–µ—Ç –∫–ª—é—á —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "error|0xabc123") –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
 * –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.
 *
 * @param {string} key ‚Äî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–º—ã—Å–ª–æ–≤–æ–π –∫–ª—é—á —Å–æ–æ–±—â–µ–Ω–∏—è (–±—É–¥–µ—Ç —Ö–µ—à–∏—Ä–æ–≤–∞–Ω)
 * @param {string} message ‚Äî –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string|null} threadId ‚Äî ID –ø–æ—Ç–æ–∫–∞ Telegram (–µ—Å–ª–∏ null ‚Äî –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω –¥–µ—Ñ–æ–ª—Ç)
 */
export async function safeSendMessage(key, message, threadId = null) {
    const hash = crypto.createHash('sha256').update(key).digest('hex').slice(0, 12);
    const dedupKey = `msg_${hash}`;
    if (!telegramLimiter.has(dedupKey)) {
        telegramLimiter.set(dedupKey, true);
        await sendMessageToChat(message, threadId);
    } else {
        console.warn(`üöß Telegram flood protection: duplicate for key "${dedupKey}"`);
    }
}

/**
 * üì¨ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram.
 * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å –∏ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞).
 *
 * @param {string} message ‚Äî –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å–µ—á—ë–Ω –¥–æ 4096 —Å–∏–º–≤–æ–ª–æ–≤)
 * @param {string|null} threadId ‚Äî ID –ø–æ—Ç–æ–∫–∞ Telegram (–∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π)
 */
export async function sendMessageToChat(message, threadId = null) {
    if (QUIET_MODE) {
        console.warn(`üì¥ QUIET_MODE –≤–∫–ª—é—á–µ–Ω ‚Äî Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
        return;
    }

    if (telegramGlobalCount >= TELEGRAM_GLOBAL_RATE) {
        console.warn(`üöß –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Telegram –¥–æ—Å—Ç–∏–≥–Ω—É—Ç ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
        return;
    }
    
    messageQueue.push({ message, threadId });

    if (!isProcessingQueue) {
        processQueue();  // –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ await, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ñ–æ–Ω–æ–º
    }
}

/**
 * üïπÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (FIFO).
 * –°–ª–µ–¥–∏—Ç –∑–∞ Telegram rate-limit (1600 –º—Å), –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç—Å—ã–ª–∞–µ—Ç –≤ –ø–æ—Ç–æ–∫ –∏ –ª–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
 *
 * @private
 */
async function processQueue() {
    isProcessingQueue = true;

    while (messageQueue.length > 0) {
        const { message, threadId } = messageQueue.shift();
        const finalThreadId = threadId ?? TELEGRAM_THREAD_DEFAULT;

        // –£—Å–µ—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç Telegram
        const safeMessage = message.length > TELEGRAM_MAX_LENGTH
            ? message.slice(0, TELEGRAM_MAX_LENGTH - 3) + '...'
            : message;
        
        try {
            const options = {};
            if (finalThreadId && finalThreadId !== 'none') {
                options.message_thread_id = Number(finalThreadId);
            }

            await bot.telegram.sendMessage(TELEGRAM_CHAT_ID, safeMessage, options);
            telegramGlobalCount++; // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            console.log(`‚úÖ Message sent to thread ${finalThreadId} : ${message}`);
        } catch (error) {
            console.error(`[WatchDogBot] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è : ${error.message}`);

            if (error.response?.status === 429 && error.response.data?.parameters?.retry_after) {
                const waitMs = error.response.data.parameters.retry_after * 1000;
                console.warn(`‚è≥ Telegram rate-limit. –û–∂–∏–¥–∞–Ω–∏–µ ${waitMs} –º—Å`);
                await delay(waitMs);
            } else if (error.response) {
                console.error(`[WatchDogBot] üì° Telegram response`, {
                    status: error.response.status,
                    headers: error.response.headers,
                    data: error.response.data,
                });
            } else if (error.request) {
                console.error(`[WatchDogBot] ‚ö†Ô∏è –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Telegram API`, {
                    request: error.request,
                });
            } else {
                console.error(`[WatchDogBot] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞`, {
                    error: error.stack || error.message || error,
                });
            }
        }

        await delay(1600); // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
    }

    isProcessingQueue = false;
}

/**
 * ‚è≥ Promise-–æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
 * @param {number} ms ‚Äî –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * @returns {Promise<void>}
 */
function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}